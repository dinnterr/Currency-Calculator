<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        QmCC
</value>
  </data>
</root>